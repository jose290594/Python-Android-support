diff -ur Python-3.6.10/Lib/ssl.py Python-3.6.10.for_android/Lib/ssl.py
--- Python-3.6.10/Lib/ssl.py	2019-12-18 11:26:36.000000000 -0800
+++ Python-3.6.10.for_android/Lib/ssl.py	2020-06-13 12:47:57.000000000 -0700
@@ -454,6 +454,17 @@
         if sys.platform == "win32":
             for storename in self._windows_cert_stores:
                 self._load_windows_store_certs(storename, purpose)
+        if os.path.exists('/etc/security/cacerts'):
+            certs = []
+            for basename in os.listdir('/etc/security/cacerts'):
+                with open('/etc/security/cacerts/' + basename) as fd:
+                    s = fd.read()
+                    if 'END CERTIFICATE' not in s:
+                        continue
+                    lines = s.split('\n')
+                    line_end_certificate = [i for i, line in enumerate(lines) if 'END CERTIFICATE' in line][0]
+                    certs.append('\n'.join(lines[0:line_end_certificate+1]))
+            self.load_verify_locations(None, None, '\n'.join(certs))
         self.set_default_verify_paths()
 
     @property
diff -ur Python-3.6.10/Lib/test/test_ssl.py Python-3.6.10.for_android/Lib/test/test_ssl.py
--- Python-3.6.10/Lib/test/test_ssl.py	2019-12-18 11:26:36.000000000 -0800
+++ Python-3.6.10.for_android/Lib/test/test_ssl.py	2020-06-13 12:47:13.000000000 -0700
@@ -1312,6 +1312,7 @@
     @unittest.skipIf(sys.platform == "win32", "not-Windows specific")
     @unittest.skipIf(IS_LIBRESSL, "LibreSSL doesn't support env vars")
     def test_load_default_certs_env(self):
+        raise unittest.SkipTest("Skipping this test for Python within an Android app")
         ctx = ssl.SSLContext(ssl.PROTOCOL_TLSv1)
         with support.EnvironmentVarGuard() as env:
             env["SSL_CERT_DIR"] = CAPATH
